"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[25547],{25547:function(e,t,i){i.d(t,{upload:function(){return u}});var r=i(46126),n=i(75100),a=i(96033),f=i(6184);function l(e){return globalThis.File&&e instanceof File}function s(e){return!!(e&&(0,a.L)(e,["data","name"]))&&!!("string"==typeof e.name&&("string"==typeof e.data||(0,f.lq)(e.data)))}function o(e){return l(e)||(0,f.lq)(e)||s(e)}async function u(e){let t;if(0===e.files.length)return null;if(e.files.map(e=>o(e)||"string"==typeof e).every(e=>!!e))t=e.files;else{let i=e.files,r=function e(t,i=[]){if(o(t))return i.push(t),i;if("object"==typeof t){if(!t)return i;if(Array.isArray(t))for(let r of t)e(r,i);else Object.keys(t).map(r=>e(t[r],i))}return i}(i=function e(t){return"string"==typeof t?function(e){if(e.includes("/ipfs/")){let t=e.split("/ipfs/")[1];return`ipfs://${t}`}return e}(t):"object"==typeof t?!t||o(t)?t:Array.isArray(t)?t.map(t=>e(t)):Object.fromEntries(Object.entries(t).map(([t,i])=>[t,e(i)])):t}(i));if(r.length){let t=await u({...e,files:r});i=function e(t,i){if(o(t)){if(i.length)return i.shift();console.warn("Not enough URIs to replace all files in object.")}return"object"==typeof t&&t?Array.isArray(t)?t.map(t=>e(t,i)):Object.fromEntries(Object.entries(t).map(([t,r])=>[t,e(r,i)])):t}(i,Array.isArray(t)?t:[t])}t=i.map(e=>"string"==typeof e?e:(0,n.P)(e))}let{fileNames:a,form:p}=function(e,t,i){let r=new Map,n=[];for(let a=0;a<t.length;a++){let o=t[a],u="",p=o;if(l(o)){if(i?.rewriteFileNames){let e="";if(o.name){let t=o.name.lastIndexOf(".");t>-1&&(e=o.name.substring(t))}u=`${a+i.rewriteFileNames.fileStartNumber}${e}`}else u=`${o.name}`}else s(o)?(p=o.data,u=i?.rewriteFileNames?`${a+i.rewriteFileNames.fileStartNumber}`:`${o.name}`):u=i?.rewriteFileNames?`${a+i.rewriteFileNames.fileStartNumber}`:`${a}`;let m=i?.uploadWithoutDirectory?"files":`files/${u}`;if(r.has(u)){if(function(e,t){if(l(e)&&l(t)){if(e.name===t.name&&e.lastModified===t.lastModified&&e.size===t.size)return!0}else if((0,f.lq)(e)&&(0,f.lq)(t))return(0,f.AY)(e,t);else if(s(e)&&s(t)&&e.name===t.name){if("string"==typeof e.data&&"string"==typeof t.data)return e.data===t.data;if((0,f.lq)(e.data)&&(0,f.lq)(t.data))return(0,f.AY)(e.data,t.data)}return!1}(r.get(u),o)){n.push(u);continue}throw Error(`[DUPLICATE_FILE_NAME_ERROR] File name ${u} was passed for more than one different file.`)}r.set(u,o),n.push(u),e.append("file",new Blob([p]),m)}let a={name:"Storage SDK",keyvalues:{...i?.metadata}};return e.append("pinataMetadata",JSON.stringify(a)),i?.uploadWithoutDirectory&&e.append("pinataOptions",JSON.stringify({wrapWithDirectory:!1})),{form:e,fileNames:n.map(e=>encodeURIComponent(e))}}(new FormData,t,e),m=(0,r.t)();if("browser"===m||"node"===m){let{uploadBatch:t}=await i.e(85810).then(i.bind(i,85810)),r=await t(e.client,p,a,e);return 1===e.files.length?r[0]:r}throw Error("Please, use the uploadMobile function in mobile environments.")}}}]);