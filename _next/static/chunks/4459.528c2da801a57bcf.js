"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4459],{4459:function(e,t,s){s.d(t,{EthereumProvider:function(){return eJ},OPTIONAL_EVENTS:function(){return eA},OPTIONAL_METHODS:function(){return eq},default:function(){return ez}});var i=s(17187),r=s.n(i),n=s(22123),a=s(97709),h=s(12044),o=s(96486),c=s(54098),p=s.n(c),l=s(85094),d=s(56186),u=Object.defineProperty,m=Object.defineProperties,v=Object.getOwnPropertyDescriptors,g=Object.getOwnPropertySymbols,f=Object.prototype.hasOwnProperty,P=Object.prototype.propertyIsEnumerable,w=(e,t,s)=>t in e?u(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,C=(e,t)=>{for(var s in t||(t={}))f.call(t,s)&&w(e,s,t[s]);if(g)for(var s of g(t))P.call(t,s)&&w(e,s,t[s]);return e},I=(e,t)=>m(e,v(t));let b={headers:{Accept:"application/json","Content-Type":"application/json"},method:"POST"};class y{constructor(e,t=!1){if(this.url=e,this.disableProviderPing=t,this.events=new i.EventEmitter,this.isAvailable=!1,this.registering=!1,!(0,d.isHttpUrl)(e))throw Error(`Provided URL is not compatible with HTTP connection: ${e}`);this.url=e,this.disableProviderPing=t}get connected(){return this.isAvailable}get connecting(){return this.registering}on(e,t){this.events.on(e,t)}once(e,t){this.events.once(e,t)}off(e,t){this.events.off(e,t)}removeListener(e,t){this.events.removeListener(e,t)}async open(e=this.url){await this.register(e)}async close(){if(!this.isAvailable)throw Error("Connection already closed");this.onClose()}async send(e){this.isAvailable||await this.register();try{let t=(0,l.u)(e),s=await (await p()(this.url,I(C({},b),{body:t}))).json();this.onPayload({data:s})}catch(t){this.onError(e.id,t)}}async register(e=this.url){if(!(0,d.isHttpUrl)(e))throw Error(`Provided URL is not compatible with HTTP connection: ${e}`);if(this.registering){let e=this.events.getMaxListeners();return(this.events.listenerCount("register_error")>=e||this.events.listenerCount("open")>=e)&&this.events.setMaxListeners(e+1),new Promise((e,t)=>{this.events.once("register_error",e=>{this.resetMaxListeners(),t(e)}),this.events.once("open",()=>{if(this.resetMaxListeners(),typeof this.isAvailable>"u")return t(Error("HTTP connection is missing or invalid"));e()})})}this.url=e,this.registering=!0;try{if(!this.disableProviderPing){let t=(0,l.u)({id:1,jsonrpc:"2.0",method:"test",params:[]});await p()(e,I(C({},b),{body:t}))}this.onOpen()}catch(t){let e=this.parseError(t);throw this.events.emit("register_error",e),this.onClose(),e}}onOpen(){this.isAvailable=!0,this.registering=!1,this.events.emit("open")}onClose(){this.isAvailable=!1,this.registering=!1,this.events.emit("close")}onPayload(e){if(typeof e.data>"u")return;let t="string"==typeof e.data?(0,l.D)(e.data):e.data;this.events.emit("payload",t)}onError(e,t){let s=this.parseError(t),i=s.message||s.toString(),r=(0,d.formatJsonRpcError)(e,i);this.events.emit("payload",r)}parseError(e,t=this.url){return(0,d.parseConnectionError)(e,t,"HTTP")}resetMaxListeners(){this.events.getMaxListeners()>10&&this.events.setMaxListeners(10)}}var E=s(64534);let $="error",O="wc@2:universal_provider:",H="https://rpc.walletconnect.org/v1/",q="generic",S=`${H}bundler`,A="default_chain_changed";var j=Object.defineProperty,_=Object.defineProperties,N=Object.getOwnPropertyDescriptors,D=Object.getOwnPropertySymbols,M=Object.prototype.hasOwnProperty,R=Object.prototype.propertyIsEnumerable,T=(e,t,s)=>t in e?j(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,k=(e,t)=>{for(var s in t||(t={}))M.call(t,s)&&T(e,s,t[s]);if(D)for(var s of D(t))R.call(t,s)&&T(e,s,t[s]);return e},U=(e,t)=>_(e,N(t));function x(e,t,s){var i;let r=(0,n.DQe)(e);return(null==(i=t.rpcMap)?void 0:i[r.reference])||`${H}?chainId=${r.namespace}:${r.reference}&projectId=${s}`}function L(e){return e.includes(":")?e.split(":")[1]:e}function z(e){return e.map(e=>`${e.split(":")[0]}:${e.split(":")[1]}`)}function J(e={},t={}){let s=F(e),i=F(t);return(0,o.merge)(s,i)}function F(e){var t,s,i,r;let a={};if(!(0,n.L5o)(e))return a;for(let[h,o]of Object.entries(e)){let e=(0,n.gpE)(h)?[h]:o.chains,c=o.methods||[],p=o.events||[],l=o.rpcMap||{},d=(0,n.Maj)(h);a[d]=U(k(k({},a[d]),o),{chains:(0,n.eGA)(e,null==(t=a[d])?void 0:t.chains),methods:(0,n.eGA)(c,null==(s=a[d])?void 0:s.methods),events:(0,n.eGA)(p,null==(i=a[d])?void 0:i.events),rpcMap:k(k({},l),null==(r=a[d])?void 0:r.rpcMap)})}return a}function Q(e){return e.includes(":")?e.split(":")[2]:e}function G(e){let t={};for(let[s,i]of Object.entries(e)){let e=i.methods||[],r=i.events||[],a=i.accounts||[],h=(0,n.gpE)(s)?[s]:i.chains?i.chains:z(i.accounts);t[s]={chains:h,methods:e,events:r,accounts:a}}return t}function W(e){return"number"==typeof e?e:e.includes("0x")?parseInt(e,16):isNaN(Number(e=e.includes(":")?e.split(":")[1]:e))?e:Number(e)}let K={},Y=e=>K[e],B=(e,t)=>{K[e]=t};class V{constructor(e){this.name="polkadot",this.namespace=e.namespace,this.events=Y("events"),this.client=Y("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;let e=this.namespace.chains[0];if(!e)throw Error("ChainId not found");return e.split(":")[1]}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){this.httpProviders[e]||this.setHttpProvider(e,t),this.chainId=e,this.events.emit(A,`${this.name}:${e}`)}getAccounts(){let e=this.namespace.accounts;return e&&e.filter(e=>e.split(":")[1]===this.chainId.toString()).map(e=>e.split(":")[2])||[]}createHttpProviders(){let e={};return this.namespace.chains.forEach(t=>{var s;let i=L(t);e[i]=this.createHttpProvider(i,null==(s=this.namespace.rpcMap)?void 0:s[t])}),e}getHttpProvider(){let e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){let s=this.createHttpProvider(e,t);s&&(this.httpProviders[e]=s)}createHttpProvider(e,t){let s=t||x(e,this.namespace,this.client.core.projectId);if(!s)throw Error(`No RPC url provided for chainId: ${e}`);return new E.r(new y(s,Y("disableProviderPing")))}}var Z=Object.defineProperty,X=Object.defineProperties,ee=Object.getOwnPropertyDescriptors,et=Object.getOwnPropertySymbols,es=Object.prototype.hasOwnProperty,ei=Object.prototype.propertyIsEnumerable,er=(e,t,s)=>t in e?Z(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,en=(e,t)=>{for(var s in t||(t={}))es.call(t,s)&&er(e,s,t[s]);if(et)for(var s of et(t))ei.call(t,s)&&er(e,s,t[s]);return e},ea=(e,t)=>X(e,ee(t));class eh{constructor(e){this.name="eip155",this.namespace=e.namespace,this.events=Y("events"),this.client=Y("client"),this.httpProviders=this.createHttpProviders(),this.chainId=parseInt(this.getDefaultChain())}async request(e){switch(e.request.method){case"eth_requestAccounts":case"eth_accounts":return this.getAccounts();case"wallet_switchEthereumChain":return await this.handleSwitchChain(e);case"eth_chainId":return parseInt(this.getDefaultChain());case"wallet_getCapabilities":return await this.getCapabilities(e);case"wallet_getCallsStatus":return await this.getCallStatus(e)}return this.namespace.methods.includes(e.request.method)?await this.client.request(e):this.getHttpProvider().request(e.request)}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}setDefaultChain(e,t){this.httpProviders[e]||this.setHttpProvider(parseInt(e),t),this.chainId=parseInt(e),this.events.emit(A,`${this.name}:${e}`)}requestAccounts(){return this.getAccounts()}getDefaultChain(){if(this.chainId)return this.chainId.toString();if(this.namespace.defaultChain)return this.namespace.defaultChain;let e=this.namespace.chains[0];if(!e)throw Error("ChainId not found");return e.split(":")[1]}createHttpProvider(e,t){let s=t||x(`${this.name}:${e}`,this.namespace,this.client.core.projectId);if(!s)throw Error(`No RPC url provided for chainId: ${e}`);return new E.r(new y(s,Y("disableProviderPing")))}setHttpProvider(e,t){let s=this.createHttpProvider(e,t);s&&(this.httpProviders[e]=s)}createHttpProviders(){let e={};return this.namespace.chains.forEach(t=>{var s;let i=parseInt(L(t));e[i]=this.createHttpProvider(i,null==(s=this.namespace.rpcMap)?void 0:s[t])}),e}getAccounts(){let e=this.namespace.accounts;return e?[...new Set(e.filter(e=>e.split(":")[1]===this.chainId.toString()).map(e=>e.split(":")[2]))]:[]}getHttpProvider(){let e=this.chainId,t=this.httpProviders[e];if(typeof t>"u")throw Error(`JSON-RPC provider for ${e} not found`);return t}async handleSwitchChain(e){var t,s;let i=e.request.params?null==(t=e.request.params[0])?void 0:t.chainId:"0x0",r=parseInt(i=i.startsWith("0x")?i:`0x${i}`,16);if(this.isChainApproved(r))this.setDefaultChain(`${r}`);else if(this.namespace.methods.includes("wallet_switchEthereumChain"))await this.client.request({topic:e.topic,request:{method:e.request.method,params:[{chainId:i}]},chainId:null==(s=this.namespace.chains)?void 0:s[0]}),this.setDefaultChain(`${r}`);else throw Error(`Failed to switch to chain 'eip155:${r}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`);return null}isChainApproved(e){return this.namespace.chains.includes(`${this.name}:${e}`)}async getCapabilities(e){var t,s,i;let r=null==(s=null==(t=e.request)?void 0:t.params)?void 0:s[0];if(!r)throw Error("Missing address parameter in `wallet_getCapabilities` request");let n=this.client.session.get(e.topic),a=(null==(i=n?.sessionProperties)?void 0:i.capabilities)||{};if(null!=a&&a[r])return a?.[r];let h=await this.client.request(e);try{await this.client.session.update(e.topic,{sessionProperties:ea(en({},n.sessionProperties||{}),{capabilities:ea(en({},a||{}),{[r]:h})})})}catch(e){console.warn("Failed to update session with capabilities",e)}return h}async getCallStatus(e){var t,s;let i=this.client.session.get(e.topic),r=null==(t=i.sessionProperties)?void 0:t.bundler_name;if(r){let t=this.getBundlerUrl(e.chainId,r);try{return await this.getUserOperationReceipt(t,e)}catch(e){console.warn("Failed to fetch call status from bundler",e,t)}}let n=null==(s=i.sessionProperties)?void 0:s.bundler_url;if(n)try{return await this.getUserOperationReceipt(n,e)}catch(e){console.warn("Failed to fetch call status from custom bundler",e,n)}if(this.namespace.methods.includes(e.request.method))return await this.client.request(e);throw Error("Fetching call status not approved by the wallet.")}async getUserOperationReceipt(e,t){var s;let i=new URL(e),r=await fetch(i,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify((0,d.formatJsonRpcRequest)("eth_getUserOperationReceipt",[null==(s=t.request.params)?void 0:s[0]]))});if(!r.ok)throw Error(`Failed to fetch user operation receipt - ${r.status}`);return await r.json()}getBundlerUrl(e,t){return`${S}?projectId=${this.client.core.projectId}&chainId=${e}&bundler=${t}`}}class eo{constructor(e){this.name="solana",this.namespace=e.namespace,this.events=Y("events"),this.client=Y("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){this.httpProviders[e]||this.setHttpProvider(e,t),this.chainId=e,this.events.emit(A,`${this.name}:${e}`)}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;let e=this.namespace.chains[0];if(!e)throw Error("ChainId not found");return e.split(":")[1]}getAccounts(){let e=this.namespace.accounts;return e?[...new Set(e.filter(e=>e.split(":")[1]===this.chainId.toString()).map(e=>e.split(":")[2]))]:[]}createHttpProviders(){let e={};return this.namespace.chains.forEach(t=>{var s;let i=L(t);e[i]=this.createHttpProvider(i,null==(s=this.namespace.rpcMap)?void 0:s[t])}),e}getHttpProvider(){let e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){let s=this.createHttpProvider(e,t);s&&(this.httpProviders[e]=s)}createHttpProvider(e,t){let s=t||x(e,this.namespace,this.client.core.projectId);if(!s)throw Error(`No RPC url provided for chainId: ${e}`);return new E.r(new y(s,Y("disableProviderPing")))}}class ec{constructor(e){this.name="cosmos",this.namespace=e.namespace,this.events=Y("events"),this.client=Y("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;let e=this.namespace.chains[0];if(!e)throw Error("ChainId not found");return e.split(":")[1]}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){this.httpProviders[e]||this.setHttpProvider(e,t),this.chainId=e,this.events.emit(A,`${this.name}:${this.chainId}`)}getAccounts(){let e=this.namespace.accounts;return e?[...new Set(e.filter(e=>e.split(":")[1]===this.chainId.toString()).map(e=>e.split(":")[2]))]:[]}createHttpProviders(){let e={};return this.namespace.chains.forEach(t=>{var s;let i=L(t);e[i]=this.createHttpProvider(i,null==(s=this.namespace.rpcMap)?void 0:s[t])}),e}getHttpProvider(){let e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){let s=this.createHttpProvider(e,t);s&&(this.httpProviders[e]=s)}createHttpProvider(e,t){let s=t||x(e,this.namespace,this.client.core.projectId);if(!s)throw Error(`No RPC url provided for chainId: ${e}`);return new E.r(new y(s,Y("disableProviderPing")))}}class ep{constructor(e){this.name="algorand",this.namespace=e.namespace,this.events=Y("events"),this.client=Y("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){if(!this.httpProviders[e]){let s=t||x(`${this.name}:${e}`,this.namespace,this.client.core.projectId);if(!s)throw Error(`No RPC url provided for chainId: ${e}`);this.setHttpProvider(e,s)}this.chainId=e,this.events.emit(A,`${this.name}:${this.chainId}`)}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;let e=this.namespace.chains[0];if(!e)throw Error("ChainId not found");return e.split(":")[1]}getAccounts(){let e=this.namespace.accounts;return e?[...new Set(e.filter(e=>e.split(":")[1]===this.chainId.toString()).map(e=>e.split(":")[2]))]:[]}createHttpProviders(){let e={};return this.namespace.chains.forEach(t=>{var s;e[t]=this.createHttpProvider(t,null==(s=this.namespace.rpcMap)?void 0:s[t])}),e}getHttpProvider(){let e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){let s=this.createHttpProvider(e,t);s&&(this.httpProviders[e]=s)}createHttpProvider(e,t){let s=t||x(e,this.namespace,this.client.core.projectId);return typeof s>"u"?void 0:new E.r(new y(s,Y("disableProviderPing")))}}class el{constructor(e){this.name="cip34",this.namespace=e.namespace,this.events=Y("events"),this.client=Y("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;let e=this.namespace.chains[0];if(!e)throw Error("ChainId not found");return e.split(":")[1]}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){this.httpProviders[e]||this.setHttpProvider(e,t),this.chainId=e,this.events.emit(A,`${this.name}:${this.chainId}`)}getAccounts(){let e=this.namespace.accounts;return e?[...new Set(e.filter(e=>e.split(":")[1]===this.chainId.toString()).map(e=>e.split(":")[2]))]:[]}createHttpProviders(){let e={};return this.namespace.chains.forEach(t=>{let s=this.getCardanoRPCUrl(t),i=L(t);e[i]=this.createHttpProvider(i,s)}),e}getHttpProvider(){let e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw Error(`JSON-RPC provider for ${e} not found`);return t}getCardanoRPCUrl(e){let t=this.namespace.rpcMap;if(t)return t[e]}setHttpProvider(e,t){let s=this.createHttpProvider(e,t);s&&(this.httpProviders[e]=s)}createHttpProvider(e,t){let s=t||this.getCardanoRPCUrl(e);if(!s)throw Error(`No RPC url provided for chainId: ${e}`);return new E.r(new y(s,Y("disableProviderPing")))}}class ed{constructor(e){this.name="elrond",this.namespace=e.namespace,this.events=Y("events"),this.client=Y("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){this.httpProviders[e]||this.setHttpProvider(e,t),this.chainId=e,this.events.emit(A,`${this.name}:${e}`)}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;let e=this.namespace.chains[0];if(!e)throw Error("ChainId not found");return e.split(":")[1]}getAccounts(){let e=this.namespace.accounts;return e?[...new Set(e.filter(e=>e.split(":")[1]===this.chainId.toString()).map(e=>e.split(":")[2]))]:[]}createHttpProviders(){let e={};return this.namespace.chains.forEach(t=>{var s;let i=L(t);e[i]=this.createHttpProvider(i,null==(s=this.namespace.rpcMap)?void 0:s[t])}),e}getHttpProvider(){let e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){let s=this.createHttpProvider(e,t);s&&(this.httpProviders[e]=s)}createHttpProvider(e,t){let s=t||x(e,this.namespace,this.client.core.projectId);if(!s)throw Error(`No RPC url provided for chainId: ${e}`);return new E.r(new y(s,Y("disableProviderPing")))}}class eu{constructor(e){this.name="multiversx",this.namespace=e.namespace,this.events=Y("events"),this.client=Y("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){this.httpProviders[e]||this.setHttpProvider(e,t),this.chainId=e,this.events.emit(A,`${this.name}:${e}`)}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;let e=this.namespace.chains[0];if(!e)throw Error("ChainId not found");return e.split(":")[1]}getAccounts(){let e=this.namespace.accounts;return e?[...new Set(e.filter(e=>e.split(":")[1]===this.chainId.toString()).map(e=>e.split(":")[2]))]:[]}createHttpProviders(){let e={};return this.namespace.chains.forEach(t=>{var s;let i=L(t);e[i]=this.createHttpProvider(i,null==(s=this.namespace.rpcMap)?void 0:s[t])}),e}getHttpProvider(){let e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){let s=this.createHttpProvider(e,t);s&&(this.httpProviders[e]=s)}createHttpProvider(e,t){let s=t||x(e,this.namespace,this.client.core.projectId);if(!s)throw Error(`No RPC url provided for chainId: ${e}`);return new E.r(new y(s,Y("disableProviderPing")))}}class em{constructor(e){this.name="near",this.namespace=e.namespace,this.events=Y("events"),this.client=Y("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;let e=this.namespace.chains[0];if(!e)throw Error("ChainId not found");return e.split(":")[1]}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){if(this.chainId=e,!this.httpProviders[e]){let s=t||x(`${this.name}:${e}`,this.namespace);if(!s)throw Error(`No RPC url provided for chainId: ${e}`);this.setHttpProvider(e,s)}this.events.emit(A,`${this.name}:${this.chainId}`)}getAccounts(){let e=this.namespace.accounts;return e&&e.filter(e=>e.split(":")[1]===this.chainId.toString()).map(e=>e.split(":")[2])||[]}createHttpProviders(){let e={};return this.namespace.chains.forEach(t=>{var s;e[t]=this.createHttpProvider(t,null==(s=this.namespace.rpcMap)?void 0:s[t])}),e}getHttpProvider(){let e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){let s=this.createHttpProvider(e,t);s&&(this.httpProviders[e]=s)}createHttpProvider(e,t){let s=t||x(e,this.namespace);return typeof s>"u"?void 0:new E.r(new y(s,Y("disableProviderPing")))}}class ev{constructor(e){this.name="tezos",this.namespace=e.namespace,this.events=Y("events"),this.client=Y("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;let e=this.namespace.chains[0];if(!e)throw Error("ChainId not found");return e.split(":")[1]}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider().request(e.request)}setDefaultChain(e,t){if(this.chainId=e,!this.httpProviders[e]){let s=t||x(`${this.name}:${e}`,this.namespace);if(!s)throw Error(`No RPC url provided for chainId: ${e}`);this.setHttpProvider(e,s)}this.events.emit(A,`${this.name}:${this.chainId}`)}getAccounts(){let e=this.namespace.accounts;return e&&e.filter(e=>e.split(":")[1]===this.chainId.toString()).map(e=>e.split(":")[2])||[]}createHttpProviders(){let e={};return this.namespace.chains.forEach(t=>{e[t]=this.createHttpProvider(t)}),e}getHttpProvider(){let e=`${this.name}:${this.chainId}`,t=this.httpProviders[e];if(typeof t>"u")throw Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){let s=this.createHttpProvider(e,t);s&&(this.httpProviders[e]=s)}createHttpProvider(e,t){let s=t||x(e,this.namespace);return typeof s>"u"?void 0:new E.r(new y(s))}}class eg{constructor(e){this.name=q,this.namespace=e.namespace,this.events=Y("events"),this.client=Y("client"),this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace.chains=[...new Set((this.namespace.chains||[]).concat(e.chains||[]))],this.namespace.accounts=[...new Set((this.namespace.accounts||[]).concat(e.accounts||[]))],this.namespace.methods=[...new Set((this.namespace.methods||[]).concat(e.methods||[]))],this.namespace.events=[...new Set((this.namespace.events||[]).concat(e.events||[]))],this.httpProviders=this.createHttpProviders()}requestAccounts(){return this.getAccounts()}request(e){return this.namespace.methods.includes(e.request.method)?this.client.request(e):this.getHttpProvider(e.chainId).request(e.request)}setDefaultChain(e,t){this.httpProviders[e]||this.setHttpProvider(e,t),this.chainId=e,this.events.emit(A,`${this.name}:${e}`)}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;let e=this.namespace.chains[0];if(!e)throw Error("ChainId not found");return e.split(":")[1]}getAccounts(){let e=this.namespace.accounts;return e?[...new Set(e.filter(e=>e.split(":")[1]===this.chainId.toString()).map(e=>e.split(":")[2]))]:[]}createHttpProviders(){var e,t;let s={};return null==(t=null==(e=this.namespace)?void 0:e.accounts)||t.forEach(e=>{let t=(0,n.DQe)(e);s[`${t.namespace}:${t.reference}`]=this.createHttpProvider(e)}),s}getHttpProvider(e){let t=this.httpProviders[e];if(typeof t>"u")throw Error(`JSON-RPC provider for ${e} not found`);return t}setHttpProvider(e,t){let s=this.createHttpProvider(e,t);s&&(this.httpProviders[e]=s)}createHttpProvider(e,t){let s=t||x(e,this.namespace,this.client.core.projectId);if(!s)throw Error(`No RPC url provided for chainId: ${e}`);return new E.r(new y(s,Y("disableProviderPing")))}}var ef=Object.defineProperty,eP=Object.defineProperties,ew=Object.getOwnPropertyDescriptors,eC=Object.getOwnPropertySymbols,eI=Object.prototype.hasOwnProperty,eb=Object.prototype.propertyIsEnumerable,ey=(e,t,s)=>t in e?ef(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,eE=(e,t)=>{for(var s in t||(t={}))eI.call(t,s)&&ey(e,s,t[s]);if(eC)for(var s of eC(t))eb.call(t,s)&&ey(e,s,t[s]);return e},e$=(e,t)=>eP(e,ew(t));class eO{constructor(e){this.events=new(r()),this.rpcProviders={},this.shouldAbortPairingAttempt=!1,this.maxPairingAttempts=10,this.disableProviderPing=!1,this.providerOpts=e,this.logger="u">typeof e?.logger&&"string"!=typeof e?.logger?e.logger:(0,h.gw)((0,h.jI)({level:e?.logger||$})),this.disableProviderPing=e?.disableProviderPing||!1}static async init(e){let t=new eO(e);return await t.initialize(),t}async request(e,t,s){let[i,r]=this.validateChain(t);if(!this.session)throw Error("Please call connect() before request()");return await this.getProvider(i).request({request:eE({},e),chainId:`${i}:${r}`,topic:this.session.topic,expiry:s})}sendAsync(e,t,s,i){let r=new Date().getTime();this.request(e,s,i).then(e=>t(null,(0,d.formatJsonRpcResult)(r,e))).catch(e=>t(e,void 0))}async enable(){if(!this.client)throw Error("Sign Client not initialized");return this.session||await this.connect({namespaces:this.namespaces,optionalNamespaces:this.optionalNamespaces,sessionProperties:this.sessionProperties}),await this.requestAccounts()}async disconnect(){var e;if(!this.session)throw Error("Please call connect() before enable()");await this.client.disconnect({topic:null==(e=this.session)?void 0:e.topic,reason:(0,n.D6H)("USER_DISCONNECTED")}),await this.cleanup()}async connect(e){if(!this.client)throw Error("Sign Client not initialized");if(this.setNamespaces(e),await this.cleanupPendingPairings(),!e.skipPairing)return await this.pair(e.pairingTopic)}async authenticate(e,t){if(!this.client)throw Error("Sign Client not initialized");this.setNamespaces(e),await this.cleanupPendingPairings();let{uri:s,response:i}=await this.client.authenticate(e,t);s&&(this.uri=s,this.events.emit("display_uri",s));let r=await i();if(this.session=r.session,this.session){let e=G(this.session.namespaces);this.namespaces=J(this.namespaces,e),this.persist("namespaces",this.namespaces),this.onConnect()}return r}on(e,t){this.events.on(e,t)}once(e,t){this.events.once(e,t)}removeListener(e,t){this.events.removeListener(e,t)}off(e,t){this.events.off(e,t)}get isWalletConnect(){return!0}async pair(e){this.shouldAbortPairingAttempt=!1;let t=0;do{if(this.shouldAbortPairingAttempt)throw Error("Pairing aborted");if(t>=this.maxPairingAttempts)throw Error("Max auto pairing attempts reached");let{uri:s,approval:i}=await this.client.connect({pairingTopic:e,requiredNamespaces:this.namespaces,optionalNamespaces:this.optionalNamespaces,sessionProperties:this.sessionProperties});s&&(this.uri=s,this.events.emit("display_uri",s)),await i().then(e=>{this.session=e;let t=G(e.namespaces);this.namespaces=J(this.namespaces,t),this.persist("namespaces",this.namespaces)}).catch(e=>{if(e.message!==a.lO)throw e;t++})}while(!this.session);return this.onConnect(),this.session}setDefaultChain(e,t){try{if(!this.session)return;let[s,i]=this.validateChain(e),r=this.getProvider(s);r.name===q?r.setDefaultChain(`${s}:${i}`,t):r.setDefaultChain(i,t)}catch(e){if(!/Please call connect/.test(e.message))throw e}}async cleanupPendingPairings(e={}){this.logger.info("Cleaning up inactive pairings...");let t=this.client.pairing.getAll();if((0,n.qt8)(t)){for(let s of t)e.deletePairings?this.client.core.expirer.set(s.topic,0):await this.client.core.relayer.subscriber.unsubscribe(s.topic);this.logger.info(`Inactive pairings cleared: ${t.length}`)}}abortPairingAttempt(){this.shouldAbortPairingAttempt=!0}async checkStorage(){if(this.namespaces=await this.getFromStore("namespaces"),this.optionalNamespaces=await this.getFromStore("optionalNamespaces")||{},this.client.session.length){let e=this.client.session.keys.length-1;this.session=this.client.session.get(this.client.session.keys[e]),this.createProviders()}}async initialize(){this.logger.trace("Initialized"),await this.createClient(),await this.checkStorage(),this.registerEventListeners()}async createClient(){this.client=this.providerOpts.client||await a.ZP.init({core:this.providerOpts.core,logger:this.providerOpts.logger||$,relayUrl:this.providerOpts.relayUrl||"wss://relay.walletconnect.org",projectId:this.providerOpts.projectId,metadata:this.providerOpts.metadata,storageOptions:this.providerOpts.storageOptions,storage:this.providerOpts.storage,name:this.providerOpts.name,customStoragePrefix:this.providerOpts.customStoragePrefix,telemetryEnabled:this.providerOpts.telemetryEnabled}),this.logger.trace("SignClient Initialized")}createProviders(){if(!this.client)throw Error("Sign Client not initialized");if(!this.session)throw Error("Session not initialized. Please call connect() before enable()");let e=[...new Set(Object.keys(this.session.namespaces).map(e=>(0,n.Maj)(e)))];B("client",this.client),B("events",this.events),B("disableProviderPing",this.disableProviderPing),e.forEach(e=>{if(!this.session)return;let t=function(e,t){let s=Object.keys(t.namespaces).filter(t=>t.includes(e));if(!s.length)return[];let i=[];return s.forEach(e=>{let s=t.namespaces[e].accounts;i.push(...s)}),i}(e,this.session),s=z(t),i=e$(eE({},J(this.namespaces,this.optionalNamespaces)[e]),{accounts:t,chains:s});switch(e){case"eip155":this.rpcProviders[e]=new eh({namespace:i});break;case"algorand":this.rpcProviders[e]=new ep({namespace:i});break;case"solana":this.rpcProviders[e]=new eo({namespace:i});break;case"cosmos":this.rpcProviders[e]=new ec({namespace:i});break;case"polkadot":this.rpcProviders[e]=new V({namespace:i});break;case"cip34":this.rpcProviders[e]=new el({namespace:i});break;case"elrond":this.rpcProviders[e]=new ed({namespace:i});break;case"multiversx":this.rpcProviders[e]=new eu({namespace:i});break;case"near":this.rpcProviders[e]=new em({namespace:i});break;case"tezos":this.rpcProviders[e]=new ev({namespace:i});break;default:this.rpcProviders[q]?this.rpcProviders[q].updateNamespace(i):this.rpcProviders[q]=new eg({namespace:i})}})}registerEventListeners(){if(typeof this.client>"u")throw Error("Sign Client is not initialized");this.client.on("session_ping",e=>{this.events.emit("session_ping",e)}),this.client.on("session_event",e=>{let{params:t}=e,{event:s}=t;if("accountsChanged"===s.name){let e=s.data;e&&(0,n.qt8)(e)&&this.events.emit("accountsChanged",e.map(Q))}else if("chainChanged"===s.name){let e=t.chainId,s=t.event.data,i=(0,n.Maj)(e),r=W(e)!==W(s)?`${i}:${W(s)}`:e;this.onChainChanged(r)}else this.events.emit(s.name,s.data);this.events.emit("session_event",e)}),this.client.on("session_update",({topic:e,params:t})=>{var s;let{namespaces:i}=t,r=null==(s=this.client)?void 0:s.session.get(e);this.session=e$(eE({},r),{namespaces:i}),this.onSessionUpdate(),this.events.emit("session_update",{topic:e,params:t})}),this.client.on("session_delete",async e=>{await this.cleanup(),this.events.emit("session_delete",e),this.events.emit("disconnect",e$(eE({},(0,n.D6H)("USER_DISCONNECTED")),{data:e.topic}))}),this.on(A,e=>{this.onChainChanged(e,!0)})}getProvider(e){return this.rpcProviders[e]||this.rpcProviders[q]}onSessionUpdate(){Object.keys(this.rpcProviders).forEach(e=>{var t;this.getProvider(e).updateNamespace(null==(t=this.session)?void 0:t.namespaces[e])})}setNamespaces(e){let{namespaces:t,optionalNamespaces:s,sessionProperties:i}=e;t&&Object.keys(t).length&&(this.namespaces=t),s&&Object.keys(s).length&&(this.optionalNamespaces=s),this.sessionProperties=i,this.persist("namespaces",t),this.persist("optionalNamespaces",s)}validateChain(e){let[t,s]=e?.split(":")||["",""];if(!this.namespaces||!Object.keys(this.namespaces).length)return[t,s];if(t&&!Object.keys(this.namespaces||{}).map(e=>(0,n.Maj)(e)).includes(t))throw Error(`Namespace '${t}' is not configured. Please call connect() first with namespace config.`);if(t&&s)return[t,s];let i=(0,n.Maj)(Object.keys(this.namespaces)[0]),r=this.rpcProviders[i].getDefaultChain();return[i,r]}async requestAccounts(){let[e]=this.validateChain();return await this.getProvider(e).requestAccounts()}onChainChanged(e,t=!1){if(!this.namespaces)return;let[s,i]=this.validateChain(e);i&&(t||this.getProvider(s).setDefaultChain(i),this.namespaces[s]?this.namespaces[s].defaultChain=i:this.namespaces[`${s}:${i}`]?this.namespaces[`${s}:${i}`].defaultChain=i:this.namespaces[`${s}:${i}`]={defaultChain:i},this.persist("namespaces",this.namespaces),this.events.emit("chainChanged",i))}onConnect(){this.createProviders(),this.events.emit("connect",{session:this.session})}async cleanup(){this.session=void 0,this.namespaces=void 0,this.optionalNamespaces=void 0,this.sessionProperties=void 0,this.persist("namespaces",void 0),this.persist("optionalNamespaces",void 0),this.persist("sessionProperties",void 0),await this.cleanupPendingPairings({deletePairings:!0})}persist(e,t){this.client.core.storage.setItem(`${O}/${e}`,t)}async getFromStore(e){return await this.client.core.storage.getItem(`${O}/${e}`)}}let eH=["eth_sendTransaction","personal_sign"],eq=["eth_accounts","eth_requestAccounts","eth_sendRawTransaction","eth_sign","eth_signTransaction","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","eth_sendTransaction","personal_sign","wallet_switchEthereumChain","wallet_addEthereumChain","wallet_getPermissions","wallet_requestPermissions","wallet_registerOnboarding","wallet_watchAsset","wallet_scanQRCode","wallet_sendCalls","wallet_getCapabilities","wallet_getCallsStatus","wallet_showCallsStatus"],eS=["chainChanged","accountsChanged"],eA=["chainChanged","accountsChanged","message","disconnect","connect"];var ej=Object.defineProperty,e_=Object.defineProperties,eN=Object.getOwnPropertyDescriptors,eD=Object.getOwnPropertySymbols,eM=Object.prototype.hasOwnProperty,eR=Object.prototype.propertyIsEnumerable,eT=(e,t,s)=>t in e?ej(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,ek=(e,t)=>{for(var s in t||(t={}))eM.call(t,s)&&eT(e,s,t[s]);if(eD)for(var s of eD(t))eR.call(t,s)&&eT(e,s,t[s]);return e},eU=(e,t)=>e_(e,eN(t));function ex(e){return Number(e[0].split(":")[1])}function eL(e){return`0x${e.toString(16)}`}class ez{constructor(){this.events=new i.EventEmitter,this.namespace="eip155",this.accounts=[],this.chainId=1,this.STORAGE_KEY="wc@2:ethereum_provider:",this.on=(e,t)=>(this.events.on(e,t),this),this.once=(e,t)=>(this.events.once(e,t),this),this.removeListener=(e,t)=>(this.events.removeListener(e,t),this),this.off=(e,t)=>(this.events.off(e,t),this),this.parseAccount=e=>this.isCompatibleChainId(e)?this.parseAccountId(e).address:e,this.signer={},this.rpc={}}static async init(e){let t=new ez;return await t.initialize(e),t}async request(e,t){return await this.signer.request(e,this.formatChainId(this.chainId),t)}sendAsync(e,t,s){this.signer.sendAsync(e,t,this.formatChainId(this.chainId),s)}get connected(){return!!this.signer.client&&this.signer.client.core.relayer.connected}get connecting(){return!!this.signer.client&&this.signer.client.core.relayer.connecting}async enable(){return this.session||await this.connect(),await this.request({method:"eth_requestAccounts"})}async connect(e){if(!this.signer.client)throw Error("Provider not initialized. Call init() first");this.loadConnectOpts(e);let{required:t,optional:s}=function(e){let{chains:t,optionalChains:s,methods:i,optionalMethods:r,events:a,optionalEvents:h,rpcMap:o}=e;if(!(0,n.qt8)(t))throw Error("Invalid chains");let c={chains:t,methods:i||eH,events:a||eS,rpcMap:ek({},t.length?{[ex(t)]:o[ex(t)]}:{})},p=a?.filter(e=>!eS.includes(e)),l=i?.filter(e=>!eH.includes(e));if(!s&&!h&&!r&&!(null!=p&&p.length)&&!(null!=l&&l.length))return{required:t.length?c:void 0};let d={chains:[...new Set(p?.length&&l?.length||!s?c.chains.concat(s||[]):s)],methods:[...new Set(c.methods.concat(null!=r&&r.length?r:eq))],events:[...new Set(c.events.concat(null!=h&&h.length?h:eA))],rpcMap:o};return{required:t.length?c:void 0,optional:s.length?d:void 0}}(this.rpc);try{let i=await new Promise(async(i,r)=>{var n;this.rpc.showQrModal&&(null==(n=this.modal)||n.subscribeModal(e=>{e.open||this.signer.session||(this.signer.abortPairingAttempt(),r(Error("Connection request reset. Please try again.")))})),await this.signer.connect(eU(ek({namespaces:ek({},t&&{[this.namespace]:t})},s&&{optionalNamespaces:{[this.namespace]:s}}),{pairingTopic:e?.pairingTopic})).then(e=>{i(e)}).catch(e=>{r(Error(e.message))})});if(!i)return;let r=(0,n.guN)(i.namespaces,[this.namespace]);this.setChainIds(this.rpc.chains.length?this.rpc.chains:r),this.setAccounts(r),this.events.emit("connect",{chainId:eL(this.chainId)})}catch(e){throw this.signer.logger.error(e),e}finally{this.modal&&this.modal.closeModal()}}async authenticate(e,t){if(!this.signer.client)throw Error("Provider not initialized. Call init() first");this.loadConnectOpts({chains:e?.chains});try{let s=await new Promise(async(s,i)=>{var r;this.rpc.showQrModal&&(null==(r=this.modal)||r.subscribeModal(e=>{e.open||this.signer.session||(this.signer.abortPairingAttempt(),i(Error("Connection request reset. Please try again.")))})),await this.signer.authenticate(eU(ek({},e),{chains:this.rpc.chains}),t).then(e=>{s(e)}).catch(e=>{i(Error(e.message))})}),i=s.session;if(i){let e=(0,n.guN)(i.namespaces,[this.namespace]);this.setChainIds(this.rpc.chains.length?this.rpc.chains:e),this.setAccounts(e),this.events.emit("connect",{chainId:eL(this.chainId)})}return s}catch(e){throw this.signer.logger.error(e),e}finally{this.modal&&this.modal.closeModal()}}async disconnect(){this.session&&await this.signer.disconnect(),this.reset()}get isWalletConnect(){return!0}get session(){return this.signer.session}registerEventListeners(){this.signer.on("session_event",e=>{let{params:t}=e,{event:s}=t;"accountsChanged"===s.name?(this.accounts=this.parseAccounts(s.data),this.events.emit("accountsChanged",this.accounts)):"chainChanged"===s.name?this.setChainId(this.formatChainId(s.data)):this.events.emit(s.name,s.data),this.events.emit("session_event",e)}),this.signer.on("chainChanged",e=>{let t=parseInt(e);this.chainId=t,this.events.emit("chainChanged",eL(this.chainId)),this.persist()}),this.signer.on("session_update",e=>{this.events.emit("session_update",e)}),this.signer.on("session_delete",e=>{this.reset(),this.events.emit("session_delete",e),this.events.emit("disconnect",eU(ek({},(0,n.D6H)("USER_DISCONNECTED")),{data:e.topic,name:"USER_DISCONNECTED"}))}),this.signer.on("display_uri",e=>{var t,s;this.rpc.showQrModal&&(null==(t=this.modal)||t.closeModal(),null==(s=this.modal)||s.openModal({uri:e})),this.events.emit("display_uri",e)})}switchEthereumChain(e){this.request({method:"wallet_switchEthereumChain",params:[{chainId:e.toString(16)}]})}isCompatibleChainId(e){return"string"==typeof e&&e.startsWith(`${this.namespace}:`)}formatChainId(e){return`${this.namespace}:${e}`}parseChainId(e){return Number(e.split(":")[1])}setChainIds(e){let t=e.filter(e=>this.isCompatibleChainId(e)).map(e=>this.parseChainId(e));t.length&&(this.chainId=t[0],this.events.emit("chainChanged",eL(this.chainId)),this.persist())}setChainId(e){if(this.isCompatibleChainId(e)){let t=this.parseChainId(e);this.chainId=t,this.switchEthereumChain(t)}}parseAccountId(e){let[t,s,i]=e.split(":");return{chainId:`${t}:${s}`,address:i}}setAccounts(e){this.accounts=e.filter(e=>this.parseChainId(this.parseAccountId(e).chainId)===this.chainId).map(e=>this.parseAccountId(e).address),this.events.emit("accountsChanged",this.accounts)}getRpcConfig(e){var t,s;let i=null!=(t=e?.chains)?t:[],r=null!=(s=e?.optionalChains)?s:[],n=i.concat(r);if(!n.length)throw Error("No chains specified in either `chains` or `optionalChains`");let a=i.length?e?.methods||eH:[],h=i.length?e?.events||eS:[],o=e?.optionalMethods||[],c=e?.optionalEvents||[],p=e?.rpcMap||this.buildRpcMap(n,e.projectId),l=e?.qrModalOptions||void 0;return{chains:i?.map(e=>this.formatChainId(e)),optionalChains:r.map(e=>this.formatChainId(e)),methods:a,events:h,optionalMethods:o,optionalEvents:c,rpcMap:p,showQrModal:!!(null!=e&&e.showQrModal),qrModalOptions:l,projectId:e.projectId,metadata:e.metadata}}buildRpcMap(e,t){let s={};return e.forEach(e=>{s[e]=this.getRpcUrl(e,t)}),s}async initialize(e){if(this.rpc=this.getRpcConfig(e),this.chainId=this.rpc.chains.length?ex(this.rpc.chains):ex(this.rpc.optionalChains),this.signer=await eO.init({projectId:this.rpc.projectId,metadata:this.rpc.metadata,disableProviderPing:e.disableProviderPing,relayUrl:e.relayUrl,storageOptions:e.storageOptions,customStoragePrefix:e.customStoragePrefix,telemetryEnabled:e.telemetryEnabled}),this.registerEventListeners(),await this.loadPersistedSession(),this.rpc.showQrModal){let e;try{let{WalletConnectModal:t}=await s.e(59343).then(s.bind(s,45161));e=t}catch{throw Error("To use QR modal, please install @walletconnect/modal package")}if(e)try{this.modal=new e(ek({projectId:this.rpc.projectId},this.rpc.qrModalOptions))}catch(e){throw this.signer.logger.error(e),Error("Could not generate WalletConnectModal Instance")}}}loadConnectOpts(e){if(!e)return;let{chains:t,optionalChains:s,rpcMap:i}=e;t&&(0,n.qt8)(t)&&(this.rpc.chains=t.map(e=>this.formatChainId(e)),t.forEach(e=>{this.rpc.rpcMap[e]=i?.[e]||this.getRpcUrl(e)})),s&&(0,n.qt8)(s)&&(this.rpc.optionalChains=[],this.rpc.optionalChains=s?.map(e=>this.formatChainId(e)),s.forEach(e=>{this.rpc.rpcMap[e]=i?.[e]||this.getRpcUrl(e)}))}getRpcUrl(e,t){var s;return(null==(s=this.rpc.rpcMap)?void 0:s[e])||`https://rpc.walletconnect.org/v1/?chainId=eip155:${e}&projectId=${t||this.rpc.projectId}`}async loadPersistedSession(){if(this.session)try{let e=await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`),t=this.session.namespaces[`${this.namespace}:${e}`]?this.session.namespaces[`${this.namespace}:${e}`]:this.session.namespaces[this.namespace];this.setChainIds(e?[this.formatChainId(e)]:t?.accounts),this.setAccounts(t?.accounts)}catch(e){this.signer.logger.error("Failed to load persisted session, clearing state..."),this.signer.logger.error(e),await this.disconnect().catch(e=>this.signer.logger.warn(e))}}reset(){this.chainId=1,this.accounts=[]}persist(){this.session&&this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`,this.chainId)}parseAccounts(e){return"string"==typeof e||e instanceof String?[this.parseAccount(e)]:e.map(e=>this.parseAccount(e))}}let eJ=ez}}]);