"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[80271],{80271:function(t,a,n){n.d(a,{relayBiconomyTransaction:function(){return u}});var e=n(45444),o=n(60301),r=n(57621),s=n(52749),i=n(96378),c=n(75100),d=n(26182);async function h({account:t,serializableTransaction:a,transaction:n,gasless:s}){let c=(0,r.u)({address:s.relayerForwarderAddress,chain:n.chain,client:n.client}),h=await (0,d.readContract)({contract:c,method:"function getNonce(address,uint256) view returns (uint256)",params:[t.address,0n]}),u=Math.floor(Date.now()/1e3)+(s.deadlineSeconds??3600),l={from:t.address,to:a.to,token:o.r_,txGas:a.gas,tokenGasPrice:0n,batchId:0n,batchNonce:h,deadline:u,data:a.data};if(!l.to)throw Error("Cannot send a transaction without a `to` address");if(!l.txGas)throw Error("Cannot send a transaction without a `gas` value");if(!l.data)throw Error("Cannot send a transaction without a `data` value");let p=(0,e.E)([{type:"address"},{type:"address"},{type:"address"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"bytes32"}],[l.from,l.to,l.token,l.txGas,l.tokenGasPrice,l.batchId,l.batchNonce,(0,i.w)(l.data)]);return[l,await t.signMessage({message:p})]}async function u(t){let[a,n]=await h(t),e=await fetch("https://api.biconomy.io/api/v2/meta-tx/native",{method:"POST",body:(0,c.P)({apiId:t.gasless.apiId,params:[a,n],from:a.from,to:a.to,gasLimit:a.txGas}),headers:{"x-api-key":t.gasless.apiKey,"Content-Type":"application/json;charset=utf-8"}});if(!e.ok)throw e.body?.cancel(),Error(`Failed to send transaction: ${await e.text()}`);let o=await e.json(),r=o.txHash;if((0,s.v)(r))return{transactionHash:r,chain:t.transaction.chain,client:t.transaction.client};throw Error(`Failed to send transaction: ${(0,c.P)(o)}`)}}}]);