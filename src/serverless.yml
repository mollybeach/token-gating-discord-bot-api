service: api

provider:
  name: aws
  runtime: nodejs14.x # node.js runtime
  memorySize: 128 # set the maximum memory of the Lambdas in Megabytes
  timeout: 10 # the timeout is 10 seconds (default is 6 seconds)
  region: us-east-1
  stage: ${opt:stage, self:custom.defaultStage}
  profile: ${self:custom.profiles.${self:provider.stage}}	
  httpApi:
    cors: true	
  logs:
    websocket: true

functions:
  initTokens:
    handler: handler.initTokens
    events:	
      - httpApi: 'GET /initTokens'
  mockUsers:
    handler: handler.mockUsers
    events:
      - httpApi: 'GET /mockUsers'
  transfers:
    handler: handler.transfers
    events:
      - websocket:
          route: transfers
      # - httpApi: 'POST /transfers'
  createUser:
    handler: handler.createUser # point to exported create function in handler.js
    events:
      - httpApi: 'POST /users'
  getUser:
    handler: handler.getUser
    events:
      - httpApi: 'GET /users/{id}'
  getUsers:
    handler: handler.getUsers # path will be domain.name.com/dev/users
    events:
      - httpApi: 'GET /users'
  updateUser:
    handler: handler.updateUser # path will be domain.name.com/dev/users/1
    events:
      - httpApi: 'PUT /users/{id}'
  getToken:
    handler: handler.getToken
    events:
      - httpApi: 'GET /tokens/{id}'
  getTokens:
    handler: handler.getTokens
    events:
      - httpApi: 'GET /tokens'
  updateTokens:
    handler: handler.updateToken
    events:
      - httpApi: 'PUT /tokens/{id}'
  

# resources:
#   Resources:
#     usersTable:
#       Type: AWS::DynamoDB::Table
#       Properties:
#         TableName: usersTable
#         AttributeDefinitions:
#           - AttributeName: discord_id
#             AttributeType: S
#           - AttributeName: public_key
#             AttributeType: S
#           - AttributeName: token_one
#             AttributeType: N
#           - AttributeName: token_two
#             AttributeType: N
#           - AttributeName: token_three
#             AttributeType: N
#           - AttributeName: token_four
#             AttributeType: N
#         KeySchema:
#           - AttributeName: discord_id
#             KeyType: HASH
#           - AttributeName: public_key
#             KeyType: HASH
#           - AttributeName: token_one
#             KeyType: HASH
#           - AttributeName: token_two
#             KeyType: HASH
#           - AttributeName: token_three
#             KeyType: HASH
#           - AttributeName: token_four
#             KeyType: HASH
#         ProvisionedThroughput:
#           ReadCapacityUnits: 1
#           WriteCapacityUnits: 1

plugins:
  - serverless-plugin-typescript
  - serverless-plugin-scripts 
  - serverless-offline # adding the plugin to be able to run the offline emulation
  # - serverless-mocha-plugin
  # - serverless-dynamodb-local
  # - serverless-plugin-offline-dynamodb-stream

custom:
  serverless-offline:
    httpPort: 3009
  defaultStage: test
  profiles:
    offline: token-gate-offline
    dev: token-gate-dev
    test: token-gate-test
    prod: token-gate-prod
